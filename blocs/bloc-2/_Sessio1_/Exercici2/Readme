Enunciat:

Afegeix al codi de l’exemple un mètode viewTransform () que implementi la crida a lookAt
amb paràmetres OBS = (0,0,1), VRP = (0,0,0), UP = (0,1,0), i enviı̈ el uniform corresponent de
la matriu view al vertex shader, que l’haurà de fer servir.

Que fem? I com ho fem?

	1. Creem la funcio "virtual void viewTransform()", la qual tindra el següent codi:

		void MyGLWidget::viewTransform() {
			glm::mat4 View = glm::lookAt(glm::vec3(0,0,1), glm::vec3(0,0,0), glm::vec3(0,1,0));
			glUniform4fv(viewLoc, 1, GL_FALSE, &View[0][0]);
		}

	  La funcio lookAt té els seguents parametres:
		lookAt ( OBS, VRP, UP );

	2. Creem el uniform viewLoc, que anomenarem a l'arxiu vertex shader com a view. En aquest arxiu el posicionarem de la seguent manera: 
		gl_Position = proj * view * ... * vec4(vertex, 1.0);


A la segona part del exercici es demana crear una funcio inicialitzaCamera, en la que inicialitzem els valors del OBS, VRP i UP, per tal de poder-los modificar posteriorment.
